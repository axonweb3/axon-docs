"use strict";(self.webpackChunkaxon_docs=self.webpackChunkaxon_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Why Build With Axon","href":"/","docId":"why_build_with_axon"},{"type":"link","label":"Axon Fundamentals","href":"/fundamentals","docId":"axon_fundamentals"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":false,"items":[{"type":"category","label":"For DApp Devs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Quick Start","href":"/getting-started/for-dapp-devs/quick_start","docId":"getting-started/for-dapp-devs/quick_start"},{"type":"link","label":"Send Transactions On Axon Via MetaMask","href":"/getting-started/for-dapp-devs/send_transactions_on_axon_via_metaMask","docId":"getting-started/for-dapp-devs/send_transactions_on_axon_via_metaMask"},{"type":"link","label":"Deploy and Interact with a Solidity Contract","href":"/getting-started/for-dapp-devs/deploy_solidity","docId":"getting-started/for-dapp-devs/deploy_solidity"}],"href":"/category/for-dapp-devs"},{"type":"category","label":"For Contributors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design Pattern","href":"/getting-started/for-contributor/design_pattern","docId":"getting-started/for-contributor/design_pattern"},{"type":"link","label":"Mempool","href":"/getting-started/for-contributor/mempool","docId":"getting-started/for-contributor/mempool"},{"type":"link","label":"Interoperability","href":"/getting-started/for-contributor/interoperability","docId":"getting-started/for-contributor/interoperability"},{"type":"link","label":"Consensus","href":"/getting-started/for-contributor/consensus","docId":"getting-started/for-contributor/consensus"},{"type":"link","label":"Network","href":"/getting-started/for-contributor/network","docId":"getting-started/for-contributor/network"},{"type":"link","label":"Executor","href":"/getting-started/for-contributor/executor","docId":"getting-started/for-contributor/executor"},{"type":"category","label":"System Contracts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Metadata","href":"/getting-started/for-contributor/system_contract/Metadata","docId":"getting-started/for-contributor/system_contract/Metadata"},{"type":"link","label":"CKB Light Client","href":"/getting-started/for-contributor/system_contract/ckb-light-client","docId":"getting-started/for-contributor/system_contract/ckb-light-client"},{"type":"link","label":"Image Cell","href":"/getting-started/for-contributor/system_contract/image_cell","docId":"getting-started/for-contributor/system_contract/image_cell"}],"href":"/category/system-contracts"},{"type":"link","label":"Storage","href":"/getting-started/for-contributor/storage","docId":"getting-started/for-contributor/storage"}],"href":"/category/for-contributors"}],"href":"/category/getting-started"},{"type":"category","label":"Staking","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Staking Protocol","href":"/staking/staking-protocol","docId":"staking/staking-protocol"}],"href":"/category/staking"},{"type":"category","label":"Contract Info","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"System Contracts","href":"/contract/system_contacts","docId":"contract/system_contacts"},{"type":"link","label":"Precompile Contracts","href":"/contract/precompile_contracts","docId":"contract/precompile_contracts"},{"type":"link","label":"Genesis Contracts","href":"/contract/genesis_contracts","docId":"contract/genesis_contracts"}],"href":"/category/contract-info"},{"type":"category","label":"API","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Latest Version","href":"/api/latest_version","docId":"api/latest_version"}],"href":"/category/api"},{"type":"category","label":"DevOps","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Configuration","href":"/devops/configuration","docId":"devops/configuration"},{"type":"link","label":"Monitoring Platform","href":"/devops/monitoring-platform","docId":"devops/monitoring-platform"},{"type":"link","label":"Procedural Macros in Instrumentation","href":"/devops/proc-macros","docId":"devops/proc-macros"},{"type":"link","label":"Explorer","href":"/devops/explorer","docId":"devops/explorer"},{"type":"link","label":"Faucet","href":"/devops/faucet","docId":"devops/faucet"},{"type":"link","label":"Proxy","href":"/devops/proxy","docId":"devops/proxy"},{"type":"link","label":"Hardfork","href":"/devops/hardfork","docId":"devops/hardfork"}],"href":"/category/devops"},{"type":"link","label":"Differences Between Axon and Ethereum","href":"/differences","docId":"difference_between_axon_and_ethereum"},{"type":"link","label":"Security Guidelines","href":"/security","docId":"security_guideline"}]},"docs":{"api/latest_version":{"id":"api/latest_version","title":"Latest Version","description":"JSON-RPC API Endpoints allow you to interact with a local or remote Axon node using HTTP, IPC or WebSocket.","sidebar":"tutorialSidebar"},"axon_fundamentals":{"id":"axon_fundamentals","title":"Axon Fundamentals","description":"Axon is a Proof-of-Stake (PoS) framework that enables developers to build app-chains as Layer 2 of CKB network. It provides a secure and efficient way of interacting with multiple participants in the network. Axon relies on a set of key concepts that underpin its operation and the various participants in its economic ecosystem. This essay contains two lists: one summarizes the key concepts; the other outlines the roles of the participants.","sidebar":"tutorialSidebar"},"contract/genesis_contracts":{"id":"contract/genesis_contracts","title":"Genesis Contracts","description":"\ud83d\udee0 This page is a work in progress. \ud83d\udea7","sidebar":"tutorialSidebar"},"contract/precompile_contracts":{"id":"contract/precompile_contracts","title":"Precompile Contracts","description":"On top of a set of opcodes, EVM also offers advanced functionalities through precompiled contracts. These are special contracts bundled with EVM at fixed addresses that can be called with a determined gas. The gas is purely the contractual cost, neither the cost of the call itself nor the instructions to put the parameters in memory.","sidebar":"tutorialSidebar"},"contract/system_contacts":{"id":"contract/system_contacts","title":"System Contracts","description":"System contracts are built-in contracts designed to facilitate inter-chain communications.","sidebar":"tutorialSidebar"},"devops/configuration":{"id":"devops/configuration","title":"Configuration","description":"Basics","sidebar":"tutorialSidebar"},"devops/explorer":{"id":"devops/explorer","title":"Explorer","description":"Axon uses BlockScan, an explorer tailored for Ethereum-compatible chains. By deploying BlockScan, you can access data from Axon-based chains and monitor their status.","sidebar":"tutorialSidebar"},"devops/faucet":{"id":"devops/faucet","title":"Faucet","description":"Axon Faucet provides tokens for testing purposes. You can explore and experiment with their full range of capabilities in a safe and controlled environment. These tokens can be used for a variety of purposes, including transaction, staking, delegation, and more.","sidebar":"tutorialSidebar"},"devops/hardfork":{"id":"devops/hardfork","title":"Hardfork","description":"Axon empowers developers to initiate hardforks. The currently available hardfork, Andromeda, takes its name from one of the 88 constellations. The upcoming hardforks on Axon will follow this order of the constellations.","sidebar":"tutorialSidebar"},"devops/monitoring-platform":{"id":"devops/monitoring-platform","title":"Monitoring Platform","description":"Black box, monitoring system, and observability","sidebar":"tutorialSidebar"},"devops/proc-macros":{"id":"devops/proc-macros","title":"Procedural Macros in Instrumentation","description":"As addressed in this article, in a distributed system, monitoring platform holds an immense significance in providing essential system feedback. As a peer-to-peer network, Axon relies on its real-time monitoring platform that contains logging, metrics, and tracing functionalities. Achieving these capabilities requires the addition of the instrumentation to the existing system.","sidebar":"tutorialSidebar"},"devops/proxy":{"id":"devops/proxy","title":"Proxy","description":"When it comes to providing a single RPC endpoint supported by multiple nodes, a reliable load balancer becomes necessary. While HTTP and WebSocket load balancers like NGINX (previously used in Axon-devops) have been widely used, we encountered challenges in implementing advanced JSON-RPC handling, such as rate limiting, caching, and sticky load balancing with them.","sidebar":"tutorialSidebar"},"difference_between_axon_and_ethereum":{"id":"difference_between_axon_and_ethereum","title":"Differences Between Axon and Ethereum","description":"This article summarizes the differences in terms of mining and wallet related APIs, and the calculation of the transactions root between Axon and Ethereum.","sidebar":"tutorialSidebar"},"getting-started/for-contributor/consensus":{"id":"getting-started/for-contributor/consensus","title":"Consensus","description":"\ud83d\udee0 This page is a work in progress. \ud83d\udea7","sidebar":"tutorialSidebar"},"getting-started/for-contributor/design_pattern":{"id":"getting-started/for-contributor/design_pattern","title":"Design Pattern","description":"Developing large-scale projects poses challenges including complexity, maintainability, scalability, and high performance. Complexity arises from multiple interdependent submodules and components, making the overall architecture and logic intricate and difficult to develop, debug, and test. Maintaining such projects becomes critical as they expand, requiring ongoing maintenance, upgrades, and improvements. Proper decoupling of modules is essential to prevent changes in one module from affecting others, which can increase maintenance costs.","sidebar":"tutorialSidebar"},"getting-started/for-contributor/executor":{"id":"getting-started/for-contributor/executor","title":"Executor","description":"Executor is a module under the core module which executes block transactions on the Axon chain. The Executor contains the implementation of Precompiled Contracts and System Contracts. It also stores the metadata, CKB headers, Image Cells etc. The Executor can execute transactions for axon system contracts or any EVM compatible contracts on Axon. The application binary interface (ABI) of Metadata, CKB Light Client and Image Cells is defined in Solidity inside another module called \u201cBuiltin Contracts\u201d. For each system contract except Native Token, there is a corresponding precompiled contract. The overall architecture is shown below.","sidebar":"tutorialSidebar"},"getting-started/for-contributor/interoperability":{"id":"getting-started/for-contributor/interoperability","title":"Interoperability","description":"Before proceeding, we recommend reading the following pieces to fully grasp this article, as they provide prerequisite knowledge:","sidebar":"tutorialSidebar"},"getting-started/for-contributor/mempool":{"id":"getting-started/for-contributor/mempool","title":"Mempool","description":"Mempool (i.e., memory pool), or transaction pool, is the queue where unconfirmed transactions are temporarily stored for further verification in order to be included in a block.","sidebar":"tutorialSidebar"},"getting-started/for-contributor/network":{"id":"getting-started/for-contributor/network","title":"Network","description":"\ud83d\udee0 This page is a work in progress. \ud83d\udea7","sidebar":"tutorialSidebar"},"getting-started/for-contributor/storage":{"id":"getting-started/for-contributor/storage","title":"Storage","description":"Axon\u2019s storage module works as a bridge between Axon and its database interface, handling the data I/O of other Axon modules.","sidebar":"tutorialSidebar"},"getting-started/for-contributor/system_contract/ckb-light-client":{"id":"getting-started/for-contributor/system_contract/ckb-light-client","title":"CKB Light Client","description":"CKB Light Client","sidebar":"tutorialSidebar"},"getting-started/for-contributor/system_contract/image_cell":{"id":"getting-started/for-contributor/system_contract/image_cell","title":"Image Cell","description":"Common Knowledge Base (CKB) is the base layer of Nervos, a multi-layered blockchain network; Axon is a 100% EVM-compatible, high-performance layer 2 framework built on top of CKB. CKB cells serve as the basic units for data storage, including smart contracts. Being able to access CKB cells could significantly improve Axon\'s interoperability.","sidebar":"tutorialSidebar"},"getting-started/for-contributor/system_contract/Metadata":{"id":"getting-started/for-contributor/system_contract/Metadata","title":"Metadata","description":"Metadata","sidebar":"tutorialSidebar"},"getting-started/for-dapp-devs/deploy_solidity":{"id":"getting-started/for-dapp-devs/deploy_solidity","title":"Deploy and Interact with a Solidity Contract","description":"Deploy a Solidity contract","sidebar":"tutorialSidebar"},"getting-started/for-dapp-devs/quick_start":{"id":"getting-started/for-dapp-devs/quick_start","title":"Quick Start","description":"Run Axon and it\'s explorer (BlockScan) locally in Docker containers using docker-compose. Please read the docker-compose file to learn more about the services:","sidebar":"tutorialSidebar"},"getting-started/for-dapp-devs/send_transactions_on_axon_via_metaMask":{"id":"getting-started/for-dapp-devs/send_transactions_on_axon_via_metaMask","title":"Send Transactions On Axon Via MetaMask","description":"To proceed with this guide, you must have MetaMask installed. Visit Metamask and you will be automatically guided to the relevant store to download the extension or app based on the device and browser you\u2019re using.","sidebar":"tutorialSidebar"},"security_guideline":{"id":"security_guideline","title":"Security Guidelines","description":"To ensure the stability and security of your Axon chain, please adhere to the following security assumptions:","sidebar":"tutorialSidebar"},"staking/staking-protocol":{"id":"staking/staking-protocol","title":"Staking Protocol","description":"This document describes the staking protocol in Axon, which is critical for ensuring the security and stability of the network. Validators run nodes and are in charge of participating in the consensus process. Anyone can engage in the staking as either a staker, who deposits their Axon Tokens (ATs) hoping to become a validator, or a delegator, who entrusts their tokens to a validator candidate. Kicker selects the stakers with the highest stakes to become future validators. An incentivized staker selection mechanism is correspondingly developed to promote honest behaviors among all participants.","sidebar":"tutorialSidebar"},"why_build_with_axon":{"id":"why_build_with_axon","title":"Why Build With Axon","description":"Axon facilitates the flow of assets and information between DApps built on different blockchains for a multi-chain future. With Axon, web3 builders can easily transform their ideas into reality. Whatever your project is, whether it\u2019s GameFi, DeFi, or NFT, Axon offers a scalable and cost-effective framework to deploy your applications.","sidebar":"tutorialSidebar"}}}')}}]);